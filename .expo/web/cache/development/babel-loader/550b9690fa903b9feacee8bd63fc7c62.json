{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nghiem/ReactNative/react-native-chat-firebase-master/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCHY3dzXK8LJbH9N5TBD7iFFCQGFGbOuNQ\",\n  authDomain: \"nghiem-chat-app.firebaseapp.com\",\n  projectId: \"nghiem-chat-app\",\n  storageBucket: \"nghiem-chat-app.appspot.com\",\n  messagingSenderId: \"151446906940\",\n  appId: \"1:151446906940:web:bf471bf0de548a320d7b39\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nYellowBox.ignoreWarnings(['Setting a timer for a long period of time']);\nvar db = firebase.firestore();\nvar chatsRef = db.collection('chats');\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  useEffect(function () {\n    readUser();\n    var unsubscribe = chatsRef.onSnapshot(function (querySnapshot) {\n      var messagesFirestore = querySnapshot.docChanges().filter(function (_ref) {\n        var type = _ref.type;\n        return type === 'added';\n      }).map(function (_ref2) {\n        var doc = _ref2.doc;\n        var message = doc.data();\n        return _objectSpread(_objectSpread({}, message), {}, {\n          createdAt: message.createdAt.toDate()\n        });\n      }).sort(function (a, b) {\n        return b.createdAt.getTime() - a.createdAt.getTime();\n      });\n      appendMessages(messagesFirestore);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var appendMessages = useCallback(function (messages) {\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, [messages]);\n\n  function readUser() {\n    var user;\n    return _regeneratorRuntime.async(function readUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              setUser(JSON.parse(user));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handlePress() {\n    var _id, user;\n\n    return _regeneratorRuntime.async(function handlePress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = Math.random().toString(36).substring(7);\n            user = {\n              _id: _id,\n              name: name\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(user)));\n\n          case 4:\n            setUser(user);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleSend(messages) {\n    var writes;\n    return _regeneratorRuntime.async(function handleSend$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            writes = messages.map(function (m) {\n              return chatsRef.add(m);\n            });\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(writes));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (!user) {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Nh\\u1EADp t\\xEAn v\\xE0o b\\u1EA1n \\u01A1i\",\n      value: name,\n      onChangeText: setName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), React.createElement(Button, {\n      onPress: handlePress,\n      title: \"Nh\\u1EA5n \\u0111\\u1EC3 v\\xF4 ph\\xF2ng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    user: user,\n    onSend: handleSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 30\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 20,\n    borderColor: 'gray'\n  }\n});","map":{"version":3,"sources":["/home/nghiem/ReactNative/react-native-chat-firebase-master/App.js"],"names":["React","useState","useEffect","useCallback","GiftedChat","AsyncStorage","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","YellowBox","ignoreWarnings","db","firestore","chatsRef","collection","App","user","setUser","name","setName","messages","setMessages","readUser","unsubscribe","onSnapshot","querySnapshot","messagesFirestore","docChanges","filter","type","map","doc","message","data","createdAt","toDate","sort","a","b","getTime","appendMessages","previousMessages","append","getItem","JSON","parse","handlePress","_id","Math","random","toString","substring","setItem","stringify","handleSend","writes","m","add","Promise","all","styles","container","input","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","height","width","borderWidth","marginBottom","borderColor"],"mappings":"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","sourcesContent":["// @refresh reset\n// <!---------------------------\n// Name: Nghiem\n// File: CHat\n// -----------------------------\n// Author: Trần Hữu Nghiêm\n// Data:   6/23/2021, 10:09:22 PM\n// ---------------------------->\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { GiftedChat } from 'react-native-gifted-chat'\nimport AsyncStorage from '@react-native-community/async-storage'\nimport { StyleSheet, TextInput, View, YellowBox, Button } from 'react-native'\nimport * as firebase from 'firebase'\nimport 'firebase/firestore'\n\n\n   // Your web app's Firebase configuration\n   const  firebaseConfig = {\n    apiKey: \"AIzaSyCHY3dzXK8LJbH9N5TBD7iFFCQGFGbOuNQ\",\n    authDomain: \"nghiem-chat-app.firebaseapp.com\",\n    projectId: \"nghiem-chat-app\",\n    storageBucket: \"nghiem-chat-app.appspot.com\",\n    messagingSenderId: \"151446906940\",\n    appId: \"1:151446906940:web:bf471bf0de548a320d7b39\"\n  }\n\n\n\nif (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig)\n}\n\nYellowBox.ignoreWarnings(['Setting a timer for a long period of time'])\n\nconst db = firebase.firestore()\nconst chatsRef = db.collection('chats')\n\nexport default function App() {\n    const [user, setUser] = useState(null)\n    const [name, setName] = useState('')\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        readUser()\n        const unsubscribe = chatsRef.onSnapshot((querySnapshot) => {\n            const messagesFirestore = querySnapshot\n                .docChanges()\n                .filter(({ type }) => type === 'added')\n                .map(({ doc }) => {\n                    const message = doc.data()\n                    //createdAt is firebase.firestore.Timestamp instance\n                    //https://firebase.google.com/docs/reference/js/firebase.firestore.Timestamp\n                    return { ...message, createdAt: message.createdAt.toDate() }\n                })\n                .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())\n            appendMessages(messagesFirestore)\n        })\n        return () => unsubscribe()\n    }, [])\n\n    const appendMessages = useCallback(\n        (messages) => {\n            setMessages((previousMessages) => GiftedChat.append(previousMessages, messages))\n        },\n        [messages]\n    )\n\n    async function readUser() {\n        const user = await AsyncStorage.getItem('user')\n        if (user) {\n            setUser(JSON.parse(user))\n        }\n    }\n    async function handlePress() {\n        const _id = Math.random().toString(36).substring(7)\n        const user = { _id, name }\n        await AsyncStorage.setItem('user', JSON.stringify(user))\n        setUser(user)\n    }\n    async function handleSend(messages) {\n        const writes = messages.map((m) => chatsRef.add(m))\n        await Promise.all(writes)\n    }\n\n    if (!user) {\n        return (\n            <View style={styles.container}>\n                <TextInput style={styles.input} placeholder=\"Nhập tên vào bạn ơi\" value={name} onChangeText={setName} />\n                <Button onPress={handlePress} title=\"Nhấn để vô phòng\" />\n            </View>\n        )\n    }\n    return <GiftedChat messages={messages} user={user} onSend={handleSend} />\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 30,\n    },\n    input: {\n        height: 50,\n        width: '100%',\n        borderWidth: 1,\n        padding: 15,\n        marginBottom: 20,\n        borderColor: 'gray',\n    },\n})\n"]},"metadata":{},"sourceType":"module"}